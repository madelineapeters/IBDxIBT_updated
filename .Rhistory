var.temp = map.df
var.temp$paraset = s
var.final = bind_rows(var.final,var.temp)
}
View(var.final)
var.final$grouping[1:(nrow(var.final)/2)] = 'Selfing'
var.final$grouping[(1+nrow(var.final)/2):nrow(var.final)] = 'No selfing'
var.final$paraset[(var.final$paraset == 17)|(var.final$paraset == 21)] = 'Random'
var.final$grouping[1:(nrow(var.final)/2)] = 'Selfing'
var.final$grouping = 'Selfing'
var.final$grouping[(1+nrow(var.final)/2):nrow(var.final)] = 'No selfing'
var.final$paraset[(var.final$paraset == 17)|(var.final$paraset == 21)] = 'Random'
var.final$paraset[(var.final$paraset == 18)|(var.final$paraset == 22)] = 'IBT'
var.final$paraset[(var.final$paraset == 19)|(var.final$paraset == 23)] = 'IBD'
var.final$paraset[(var.final$paraset == 20)|(var.final$paraset == 24)] = 'IBDxIBT'
names(var.final)[4] = 'Isolation'
summary.df = var.final %>% group_by(.,Generation,grouping,Isolation) %>% summarise(var=var(Frequency))
summary.df$Run = r
if (r == 1){joint.summary = summary.df} else {joint.summary = bind_rows(joint.summary,summary.df)}
var.final$grouping = 'Selfing'
var.final$grouping[(1+nrow(var.final)/2):nrow(var.final)] = 'No selfing'
var.final$paraset[(var.final$paraset == 17)|(var.final$paraset == 21)] = 'Random'
var.final$paraset[(var.final$paraset == 18)|(var.final$paraset == 22)] = 'IBT'
var.final %>% group_by(.,Generation,grouping,Isolation) %>% summarise(var=var(Frequency))
detach("package:dplyr")
detach("package:tidyr")
detach("package:tidyr")
library(plyr)
library(dplyr)
library(tibble)
library(ggplot2)
library(RColorBrewer)
var.final %>% group_by(.,Generation,grouping,Isolation) %>% summarise(var=var(Frequency))
##############################################################
## Calculate spatial autocorrelation statistics
##############################################################
for (r in r.list){
for (s in 17:24){
Mantel.obs = as.data.frame(matrix(nrow=length(g.list),ncol=8))
names(Mantel.obs) = sapply(17:24, function(X) paste('paraset',X,sep="_"))
for (g in 1:length(g.list)){
gen = g.list[g]
df = read.csv(paste(getwd(),'/para_set_',s,'/model_run_',r,'/paraset_',s,'_offspring_map_',gen,'.csv',sep=""))
neutral.df = df %>% select(.,FLday,X_pos,Y_pos,mapA,mapB,mapC,neut1a:neut24b)
neutral.df[] = lapply(neutral.df, as.character)
neutral.df[neutral.df == 'D'] = 1;
neutral.df[neutral.df[,] == 'd'] = 0
neutral.df[] = lapply(neutral.df, as.numeric)
neutral.df = neutral.df %>%
mutate(.,map1 = neut1a+neut1b) %>%
mutate(.,map2 = neut2a+neut2b) %>%
mutate(.,map3 = neut3a+neut3b) %>%
mutate(.,map4 = neut4a+neut4b) %>%
mutate(.,map5 = neut5a+neut5b) %>%
mutate(.,map6 = neut6a+neut6b) %>%
mutate(.,map7 = neut7a+neut7b) %>%
mutate(.,map8 = neut8a+neut8b) %>%
mutate(.,map9 = neut9a+neut9b) %>%
mutate(.,map10 = neut10a+neut10b) %>%
mutate(.,map11 = neut11a+neut11b) %>%
mutate(.,map12 = neut12a+neut12b) %>%
mutate(.,map13 = neut13a+neut13b) %>%
mutate(.,map14 = neut14a+neut14b) %>%
mutate(.,map15 = neut15a+neut15b) %>%
mutate(.,map16 = neut16a+neut16b) %>%
mutate(.,map17 = neut17a+neut17b) %>%
mutate(.,map18 = neut18a+neut18b) %>%
mutate(.,map19 = neut19a+neut19b) %>%
mutate(.,map20 = neut20a+neut20b) %>%
mutate(.,map21 = neut21a+neut21b) %>%
mutate(.,map22 = neut22a+neut22b) %>%
mutate(.,map23 = neut23a+neut23b) %>%
mutate(.,map24 = neut24a+neut24b)
ind.neutral.df = neutral.df %>% select(.,FLday,X_pos,Y_pos,mapA:mapC,map1:map24)
neutral.df = neutral.df %>% select(.,mapA:mapC,map1:map24)
neutral.freq = colSums(neutral.df)/(2*nrow(neutral.df))
if (g == 1){
map.df = as.data.frame(neutral.freq) %>% rownames_to_column()
map.df$Generation = gen
names(map.df) = c('Locus','Frequency','Generation')
} else {
temp.df = as.data.frame(neutral.freq) %>% rownames_to_column()
temp.df$Generation = gen
names(temp.df) = c('Locus','Frequency','Generation')
map.df = bind_rows(map.df,temp.df)
}
}
if (s == 17){
var.final = map.df
var.final$paraset = s
} else {
var.temp = map.df
var.temp$paraset = s
var.final = bind_rows(var.final,var.temp)
}
}
var.final$grouping = 'Selfing'
var.final$grouping[(1+nrow(var.final)/2):nrow(var.final)] = 'No selfing'
var.final$paraset[(var.final$paraset == 17)|(var.final$paraset == 21)] = 'Random'
var.final$paraset[(var.final$paraset == 18)|(var.final$paraset == 22)] = 'IBT'
var.final$paraset[(var.final$paraset == 19)|(var.final$paraset == 23)] = 'IBD'
var.final$paraset[(var.final$paraset == 20)|(var.final$paraset == 24)] = 'IBDxIBT'
names(var.final)[4] = 'Isolation'
summary.df = var.final %>% group_by(.,Generation,grouping,Isolation) %>% summarise(var=var(Frequency))
summary.df$Run = r
if (r == 1){joint.summary = summary.df} else {joint.summary = bind_rows(joint.summary,summary.df)}
}
Var.avg = joint.summary %>% group_by(grouping,Isolation,Generation) %>% summarise(.,avg=mean(var))
Var.sd = joint.summary %>% group_by(grouping,Isolation,Generation) %>% summarize(.,SD = sd(var))
Var.plot = bind_cols(Var.avg,as.data.frame(Var.sd$SD))
names(Var.plot)[5] = 'SD'
ggplot(data=Var.plot,aes(x=Generation))+
geom_ribbon(aes(ymin=avg-SD,ymax=avg+SD,fill=Isolation),alpha=0.2)+
geom_line(aes(y=avg,col=Isolation),size=1)+
theme_classic()+ylab('Variance')+facet_grid(.~grouping)+ggtitle('Variance in allele frequency at neutral loci')
ggplot()+geom_line(data=filter(joint.summary,Run==1),aes(x=Generation,y=var,col=Isolation),alpha=0.5)+geom_line(data=filter(joint.summary,Run==2),aes(x=Generation,y=var,col=Isolation),alpha=0.5)+
geom_line(data=Var.avg,aes(x=Generation,y=avg,col=Isolation),size=1)+
theme_classic()+ylab('Variance')+facet_grid(.~grouping)+ggtitle('Variance in allele frequency at neutral loci')
ggplot()+geom_line(data=filter(joint.summary,Run==1),aes(x=Generation,y=var,col=Isolation),alpha=0.5)+geom_line(data=filter(joint.summary,Run==2),aes(x=Generation,y=var,col=Isolation),alpha=0.5)+
geom_line(data=filter(joint.summary,Run==3),aes(x=Generation,y=var,col=Isolation),alpha=0.5)+
geom_line(data=Var.avg,aes(x=Generation,y=avg,col=Isolation),size=1)+
theme_classic()+ylab('Variance')+facet_grid(.~grouping)+ggtitle('Variance in allele frequency at neutral loci')
library(dplyr)
library(tibble)
library(ggplot2)
library(RColorBrewer)
library(factoextra)
library(cluster)
library(NbClust)
library(mclust)
library(rgl)
# Set parameters
para_set = 17
run = 1
g = 800
# Read in data and set up for k-means analysis
df = read.csv(paste(getwd(),'/para_set_',para_set,'/model_run_',run,'/paraset_',para_set,'_offspring_map_',g,'.csv',sep=""))
neutral.df = df %>% select(.,FLday,X_pos,Y_pos,mapA,mapB,mapC,loc1a:loc5b,neut1a:neut24b)
neutral.df[] = lapply(neutral.df, as.character)
neutral.df[neutral.df == 'D'] = 1;
neutral.df[neutral.df[,] == 'd'] = 0
neutral.df[] = lapply(neutral.df, as.numeric)
neutral.df = neutral.df %>%
mutate(.,F1 = loc1a+loc1b) %>%
mutate(.,F2 = loc2a+loc2b) %>%
mutate(.,F3 = loc3a+loc3b) %>%
mutate(.,F4 = loc4a+loc4b) %>%
mutate(.,F5 = loc5a+loc5b) %>%
mutate(.,map1 = neut1a+neut1b) %>%
mutate(.,map2 = neut2a+neut2b) %>%
mutate(.,map3 = neut3a+neut3b) %>%
mutate(.,map4 = neut4a+neut4b) %>%
mutate(.,map5 = neut5a+neut5b) %>%
mutate(.,map6 = neut6a+neut6b) %>%
mutate(.,map7 = neut7a+neut7b) %>%
mutate(.,map8 = neut8a+neut8b) %>%
mutate(.,map9 = neut9a+neut9b) %>%
mutate(.,map10 = neut10a+neut10b) %>%
mutate(.,map11 = neut11a+neut11b) %>%
mutate(.,map12 = neut12a+neut12b) %>%
mutate(.,map13 = neut13a+neut13b) %>%
mutate(.,map14 = neut14a+neut14b) %>%
mutate(.,map15 = neut15a+neut15b) %>%
mutate(.,map16 = neut16a+neut16b) %>%
mutate(.,map17 = neut17a+neut17b) %>%
mutate(.,map18 = neut18a+neut18b) %>%
mutate(.,map19 = neut19a+neut19b) %>%
mutate(.,map20 = neut20a+neut20b) %>%
mutate(.,map21 = neut21a+neut21b) %>%
mutate(.,map22 = neut22a+neut22b) %>%
mutate(.,map23 = neut23a+neut23b) %>%
mutate(.,map24 = neut24a+neut24b)
ind.neutral.df = neutral.df %>% select(.,FLday,X_pos,Y_pos,mapA:mapC,map1:map24)
neutral.df = neutral.df %>% select(.,mapA:mapC,map1:map24)
df.scaled = scale(neutral.df)
scaled.matrix = as.matrix(df.scaled)
d_clust = Mclust(scaled.matrix, G=1:4,
modelNames = mclust.options("emModelNames"))
############ K-means clustering ###############
k.means = 2#d_clust$G
km.res = kmeans(df.scaled, k.means, iter.max = 20,nstart = 25)
# Visualize k-means clusters
fviz_cluster(km.res, data = df.scaled, geom = "point",
stand = FALSE, ellipse.type = "norm")+theme_classic()+theme(legend.position='none')+
ggtitle(paste('Neutral genetic clusters in two-dimensional space (k = ',k.means,')',sep=""))+
geom_point(aes(col=factor(ind.neutral.df$FLday)))
ggplot()+geom_tile(data=df,aes(x=X_pos,y=Y_pos,fill=km.res$cluster))+theme_classic()+theme(legend.position='none')+xlab('X position')+ylab('Y position')+ggtitle(paste('Neutral genetic clusters in two-dimensional space (k = ',d_clust$G,')',sep=""))+scale_fill_gradient(low='white',high='red')
ggplot()+geom_tile(data=df,aes(x=X_pos,y=Y_pos,fill=FLday))+theme_classic()+theme(legend.position='none')+xlab('X position')+ylab('Y position')+ggtitle(paste('Flowering day'))
ggplot()+geom_point(data=df,aes(x=FLday,y=km.res$cluster))+theme_classic()
hist.df = df %>% bind_cols(.,as.data.frame(km$cluster))
hist.df = df %>% bind_cols(.,as.data.frame(km.res$cluster))
names(df)
names(hist.df)
c = km.res$cluster
ggplot(data=filter(df,km.res$cluster==1), aes(FLday)) + geom_histogram()
ggplot()+geom_histogram(data=filter(df,km.res$cluster==1), aes(FLday),fill='blue',alpha=0.5)+
geom_histogram(data=filter(df,km.res$cluster==2), aes(FLday),fill='red',alpha=0.5)
ggplot()+geom_histogram(data=filter(df,km.res$cluster==1), aes(FLday),fill='blue',alpha=0.5,binwidth=10)+
geom_histogram(data=filter(df,km.res$cluster==2), aes(FLday),fill='red',alpha=0.5)
ggplot()+geom_histogram(data=filter(df,km.res$cluster==1), aes(FLday),fill='blue',alpha=0.5,binwidth=30)+
geom_histogram(data=filter(df,km.res$cluster==2), aes(FLday),fill='red',alpha=0.5)
ggplot()+geom_histogram(data=filter(df,km.res$cluster==1), aes(FLday),fill='blue',alpha=0.5,binwidth=1)+
geom_histogram(data=filter(df,km.res$cluster==2), aes(FLday),fill='red',alpha=0.5)
ggplot()+geom_histogram(data=filter(df,km.res$cluster==1), aes(FLday),fill='blue',alpha=0.5,binwidth=1)+
geom_histogram(data=filter(df,km.res$cluster==2), aes(FLday),fill='red',alpha=0.5,binwidth=1)
# Set parameters
para_set = 20
run = 1
g = 800
# Read in data and set up for k-means analysis
df = read.csv(paste(getwd(),'/para_set_',para_set,'/model_run_',run,'/paraset_',para_set,'_offspring_map_',g,'.csv',sep=""))
neutral.df = df %>% select(.,FLday,X_pos,Y_pos,mapA,mapB,mapC,loc1a:loc5b,neut1a:neut24b)
neutral.df[] = lapply(neutral.df, as.character)
neutral.df[neutral.df == 'D'] = 1;
neutral.df[neutral.df[,] == 'd'] = 0
neutral.df[] = lapply(neutral.df, as.numeric)
neutral.df = neutral.df %>%
mutate(.,F1 = loc1a+loc1b) %>%
mutate(.,F2 = loc2a+loc2b) %>%
mutate(.,F3 = loc3a+loc3b) %>%
mutate(.,F4 = loc4a+loc4b) %>%
mutate(.,F5 = loc5a+loc5b) %>%
mutate(.,map1 = neut1a+neut1b) %>%
mutate(.,map2 = neut2a+neut2b) %>%
mutate(.,map3 = neut3a+neut3b) %>%
mutate(.,map4 = neut4a+neut4b) %>%
mutate(.,map5 = neut5a+neut5b) %>%
mutate(.,map6 = neut6a+neut6b) %>%
mutate(.,map7 = neut7a+neut7b) %>%
mutate(.,map8 = neut8a+neut8b) %>%
mutate(.,map9 = neut9a+neut9b) %>%
mutate(.,map10 = neut10a+neut10b) %>%
mutate(.,map11 = neut11a+neut11b) %>%
mutate(.,map12 = neut12a+neut12b) %>%
mutate(.,map13 = neut13a+neut13b) %>%
mutate(.,map14 = neut14a+neut14b) %>%
mutate(.,map15 = neut15a+neut15b) %>%
mutate(.,map16 = neut16a+neut16b) %>%
mutate(.,map17 = neut17a+neut17b) %>%
mutate(.,map18 = neut18a+neut18b) %>%
mutate(.,map19 = neut19a+neut19b) %>%
mutate(.,map20 = neut20a+neut20b) %>%
mutate(.,map21 = neut21a+neut21b) %>%
mutate(.,map22 = neut22a+neut22b) %>%
mutate(.,map23 = neut23a+neut23b) %>%
mutate(.,map24 = neut24a+neut24b)
ind.neutral.df = neutral.df %>% select(.,FLday,X_pos,Y_pos,mapA:mapC,map1:map24)
neutral.df = neutral.df %>% select(.,mapA:mapC,map1:map24)
df.scaled = scale(neutral.df)
scaled.matrix = as.matrix(df.scaled)
set.seed(123)
############ K-means clustering ###############
k.means = 2#d_clust$G
km.res = kmeans(df.scaled, k.means, iter.max = 20,nstart = 25)
# Visualize k-means clusters
fviz_cluster(km.res, data = df.scaled, geom = "point",
stand = FALSE, ellipse.type = "norm")+theme_classic()+theme(legend.position='none')+
ggtitle(paste('Neutral genetic clusters in two-dimensional space (k = ',k.means,')',sep=""))+
geom_point(aes(col=factor(ind.neutral.df$FLday)))
hist.df = df %>% bind_cols(.,as.data.frame(km.res$cluster))
ggplot()+geom_histogram(data=filter(df,km.res$cluster==1), aes(FLday),fill='blue',alpha=0.5,binwidth=1)+
geom_histogram(data=filter(df,km.res$cluster==2), aes(FLday),fill='red',alpha=0.5,binwidth=1)
ggplot()+geom_histogram(data=hist.df, aes(FLday,fill=km.res$cluster),alpha=0.5,binwidth=1)+
#geom_histogram(data=filter(df,km.res$cluster==2), aes(FLday),fill='red',alpha=0.5,binwidth=1)+
xlab('Flowering day')+ylab('Counts')
ggplot()+geom_histogram(data=filter(df,km.res$cluster==2), aes(FLday,fill=km.res$cluster),fill='blue',alpha=0.5,binwidth=1)+
geom_histogram(data=filter(df,km.res$cluster==1), aes(FLday),fill='red',alpha=0.5,binwidth=1)+xlab('Flowering day')+ylab('Counts')+scale_colour_manual(name="Cluster",values=c(cluster1="red", cluster2="blue"))
ggplot()+geom_histogram(data=filter(df,km.res$cluster==2), aes(FLday,fill=km.res$cluster,fill="cluster2"),alpha=0.5,binwidth=1)+
geom_histogram(data=filter(df,km.res$cluster==1), aes(FLday,fill="cluster1"),alpha=0.5,binwidth=1)+xlab('Flowering day')+ylab('Counts')+scale_fill_manual(name="Cluster",values=c(cluster1="red", cluster2="blue"))
ggplot()+geom_histogram(data=filter(df,km.res$cluster==2), aes(FLday,fill="cluster2"),alpha=0.5,binwidth=1)+
geom_histogram(data=filter(df,km.res$cluster==1), aes(FLday,fill="cluster1"),alpha=0.5,binwidth=1)+xlab('Flowering day')+ylab('Counts')+scale_fill_manual(name="Cluster",values=c(cluster1="red", cluster2="blue"))
ggplot()+geom_histogram(data=filter(df,km.res$cluster==2), aes(FLday,fill="cluster2"),alpha=0.9,binwidth=1)+
geom_histogram(data=filter(df,km.res$cluster==1), aes(FLday,fill="cluster1"),alpha=0.9,binwidth=1)+xlab('Flowering day')+ylab('Counts')+scale_fill_manual(name="Cluster",values=c(cluster1="red", cluster2="blue"))
ggplot()+geom_histogram(data=filter(df,km.res$cluster==2), aes(FLday,fill="cluster2"),alpha=0.6,binwidth=1)+
geom_histogram(data=filter(df,km.res$cluster==1), aes(FLday,fill="cluster1"),alpha=0.6,binwidth=1)+xlab('Flowering day')+ylab('Counts')+scale_fill_manual(name="Cluster",values=c(cluster1="red", cluster2="blue"))
ggplot()+geom_histogram(data=filter(df,km.res$cluster==2), aes(FLday,fill="2"),alpha=0.6,binwidth=1)+
geom_histogram(data=filter(df,km.res$cluster==1), aes(FLday,fill="1"),alpha=0.6,binwidth=1)+xlab('Flowering day')+ylab('Counts')+scale_fill_manual(name="Cluster",values=c(`1`="red", `1`="blue"))
ggplot()+geom_histogram(data=filter(df,km.res$cluster==2), aes(FLday,fill="2"),alpha=0.6,binwidth=1)+
geom_histogram(data=filter(df,km.res$cluster==1), aes(FLday,fill="1"),alpha=0.6,binwidth=1)+xlab('Flowering day')+ylab('Counts')+scale_fill_manual(name="Cluster",values=c(`1`="red", `2`="blue"))
ggplot()+geom_histogram(data=filter(df,km.res$cluster==2), aes(FLday,fill="2"),alpha=0.6,binwidth=1)+
geom_histogram(data=filter(df,km.res$cluster==1), aes(FLday,fill="1"),alpha=0.6,binwidth=1)+xlab('Flowering day')+ylab('Counts')+scale_fill_manual(name="Cluster",values=c(`1`="red", `2`="blue"))+theme_classic()
ggplot()+geom_histogram(data=filter(df,km.res$cluster==2), aes(FLday,fill="2"),alpha=0.6,binwidth=1)+
geom_histogram(data=filter(df,km.res$cluster==1), aes(FLday,fill="1"),alpha=0.6,binwidth=1)+xlab('Flowering day')+ylab('Counts')+scale_fill_manual(name="Cluster",`1`=alpha("red",0.6), `2`=alpha("blue",0.6))+theme_classic()
ggplot()+geom_histogram(data=filter(df,km.res$cluster==2), aes(FLday,fill="2"),alpha=0.6,binwidth=1)+
geom_histogram(data=filter(df,km.res$cluster==1), aes(FLday,fill="1"),alpha=0.6,binwidth=1)+xlab('Flowering day')+ylab('Counts')+scale_fill_manual(name="Cluster",`1`="red", `2`="blue",alpha=0.6)+theme_classic()
ggplot()+geom_histogram(data=filter(df,km.res$cluster==2), aes(FLday,fill="2"),alpha=0.6,binwidth=1)+
geom_histogram(data=filter(df,km.res$cluster==1), aes(FLday,fill="1"),alpha=0.6,binwidth=1)+xlab('Flowering day')+ylab('Counts')+scale_fill_manual(name="Cluster",values=c(`1`="red", `2`="blue",alpha=0.6))+theme_classic()
ggplot()+geom_histogram(data=filter(df,km.res$cluster==2), aes(FLday,fill="2"),alpha=0.6,binwidth=1)+
geom_histogram(data=filter(df,km.res$cluster==1), aes(FLday,fill="1"),alpha=0.6,binwidth=1)+xlab('Flowering day')+ylab('Counts')+scale_fill_manual(name="Cluster",values=alpha(c(`1`="red", `2`="blue"),alpha=0.6))+theme_classic()
ggplot()+geom_histogram(data=filter(df,km.res$cluster==2), aes(FLday,fill="2"),alpha=0.6,binwidth=1)+
geom_histogram(data=filter(df,km.res$cluster==1), aes(FLday,fill="1"),alpha=0.6,binwidth=1)+xlab('Flowering day')+ylab('Counts')+scale_fill_manual(name="Cluster",values=alpha(c(`1`="red", `2`="blue"),0.6))+theme_classic()
ggplot()+geom_histogram(data=filter(df,km.res$cluster==2), aes(FLday,fill="2"),alpha=0.6,binwidth=1)+
geom_histogram(data=filter(df,km.res$cluster==1), aes(FLday,fill="1"),alpha=0.6,binwidth=1)+xlab('Flowering day')+ylab('Counts')+scale_fill_manual(name="Cluster",values=alpha(c("red", "blue"),0.6))+theme_classic()
ggplot()+geom_histogram(data=hist.df, aes(FLday,fill=km.res$cluster,position='dodge'),binwidth=1)+  #geom_histogram(data=filter(df,km.res$cluster==2), aes(FLday),fill='red',alpha=0.5,binwidth=1)+
xlab('Flowering day')+ylab('Counts')
ggplot()+geom_histogram(data=hist.df, aes(FLday,fill=km.res$cluster),position='dodge',binwidth=1)+  #geom_histogram(data=filter(df,km.res$cluster==2), aes(FLday),fill='red',alpha=0.5,binwidth=1)+
xlab('Flowering day')+ylab('Counts')
ggplot(hist.df, aes(x=FLday, color=`km.res$cluster`)) +
geom_histogram(fill="white", position="dodge")
ggplot(df, aes(x=FLday, color=km.res$cluster)) +
geom_histogram(fill="white", alpha=0.5, position="identity")
ggplot(df, aes(x=FLday, col=km.res$cluster)) +
geom_histogram(fill="white", alpha=0.5, position="identity")
ggplot(df, aes(x=FLday)) +
geom_histogram(col=km.res$cluster,fill="white", alpha=0.5, position="identity")
ggplot(df, aes(x=FLday)) +
geom_histogram(col=`km.res$cluster`,fill="white", alpha=0.5, position="identity")
ggplot(hist.df, aes(x=FLday)) +
geom_histogram(col=`km.res$cluster`,fill="white", alpha=0.5, position="identity")
names(hist.df)
ggplot(hist.df, aes(x=FLday)) +
geom_histogram(col=`km.res$cluster`,fill="white", alpha=0.5, position="identity")
ggplot(hist.df, aes(x=FLday)) +
geom_histogram(col=km.res$cluster,fill="white", alpha=0.5, position="identity")
ggplot(hist.df, aes(x=FLday, color=km.res$cluster)) +
geom_histogram(fill="white", position="dodge")+
theme(legend.position="top")
ggplot(hist.df, aes(x=FLday, color=km.res$cluster)) +
geom_histogram(position="dodge")+
theme(legend.position="top")
head(hist.df)
names(hist.df)[ncol(hist.df)] = 'Cluster'
names(hist.df)
ggplot(hist.df, aes(x=FLday, color=Cluster)) +
geom_histogram(position="dodge")+
theme(legend.position="top")
ggplot() +
geom_histogram(hist.df, aes(x=FLday, color=Cluster),position="dodge")+
theme(legend.position="top")
ggplot() +
geom_histogram(hist.df, aes(x=FLday, color=Cluster,position='dodge'))+
theme(legend.position="top")
ggplot() + geom_histogram(hist.df, aes(x=FLday, color=Cluster))+
theme(legend.position="top")
ggplot(data=hist.df,aes(FLday,color=Cluster)) + geom_histogram(position='dodge')+
theme(legend.position="top")
unique(hist.df$Cluster)
ggplot(data=hist.df,aes(FLday,fill=Cluster)) + geom_histogram(position='dodge')+
theme(legend.position="top")
ggplot(data=hist.df,aes(FLday,fill=Cluster)) + geom_histogram(position='dodge')
ggplot(data=hist.df,aes(FLday,fill='red')) + geom_histogram(position='dodge')
ggplot(data=hist.df,aes(FLday)) + geom_histogram(aes(fill=Cluster),position='dodge')
ggplot(data=hist.df,aes(FLday)) + geom_histogram(aes(fill=km.res$cluster),position='dodge')
ggplot(data=hist.df,aes(FLday)) + geom_histogram(aes(fill=factor(km.res$cluster)),position='dodge')
ggplot(data=hist.df,aes(FLday)) + geom_histogram(aes(fill=factor(km.res$cluster)),position='dodge')+guides(fill=guide_legend(title="Cluster"))+theme_classic()
ggplot(data=hist.df,aes(FLday)) + geom_histogram(aes(fill=factor(km.res$cluster)),position='dodge')+guides(fill=guide_legend(title="Cluster"))+theme_classic()+ylab('Count')
ggplot(data=hist.df,aes(FLday)) + geom_histogram(aes(fill=factor(km.res$cluster)),position='dodge')+guides(fill=guide_legend(title="Neutral cluster"))+theme_classic()+ylab('Count')
# Set parameters
run = 1
g = 800
for (s in 17:24){
# Read in data and set up for k-means analysis
df = read.csv(paste(getwd(),'/para_set_',para_set,'/model_run_',run,'/paraset_',s,'_offspring_map_',g,'.csv',sep=""))
neutral.df = df %>% select(.,FLday,X_pos,Y_pos,mapA,mapB,mapC,loc1a:loc5b,neut1a:neut24b)
neutral.df[] = lapply(neutral.df, as.character)
neutral.df[neutral.df == 'D'] = 1;
neutral.df[neutral.df[,] == 'd'] = 0
neutral.df[] = lapply(neutral.df, as.numeric)
neutral.df = neutral.df %>%
mutate(.,F1 = loc1a+loc1b) %>%
mutate(.,F2 = loc2a+loc2b) %>%
mutate(.,F3 = loc3a+loc3b) %>%
mutate(.,F4 = loc4a+loc4b) %>%
mutate(.,F5 = loc5a+loc5b) %>%
mutate(.,map1 = neut1a+neut1b) %>%
mutate(.,map2 = neut2a+neut2b) %>%
mutate(.,map3 = neut3a+neut3b) %>%
mutate(.,map4 = neut4a+neut4b) %>%
mutate(.,map5 = neut5a+neut5b) %>%
mutate(.,map6 = neut6a+neut6b) %>%
mutate(.,map7 = neut7a+neut7b) %>%
mutate(.,map8 = neut8a+neut8b) %>%
mutate(.,map9 = neut9a+neut9b) %>%
mutate(.,map10 = neut10a+neut10b) %>%
mutate(.,map11 = neut11a+neut11b) %>%
mutate(.,map12 = neut12a+neut12b) %>%
mutate(.,map13 = neut13a+neut13b) %>%
mutate(.,map14 = neut14a+neut14b) %>%
mutate(.,map15 = neut15a+neut15b) %>%
mutate(.,map16 = neut16a+neut16b) %>%
mutate(.,map17 = neut17a+neut17b) %>%
mutate(.,map18 = neut18a+neut18b) %>%
mutate(.,map19 = neut19a+neut19b) %>%
mutate(.,map20 = neut20a+neut20b) %>%
mutate(.,map21 = neut21a+neut21b) %>%
mutate(.,map22 = neut22a+neut22b) %>%
mutate(.,map23 = neut23a+neut23b) %>%
mutate(.,map24 = neut24a+neut24b)
ind.neutral.df = neutral.df %>% select(.,FLday,X_pos,Y_pos,mapA:mapC,map1:map24)
neutral.df = neutral.df %>% select(.,mapA:mapC,map1:map24)
df.scaled = scale(neutral.df)
scaled.matrix = as.matrix(df.scaled)
k.means = 2#d_clust$G
km.res = kmeans(df.scaled, k.means, iter.max = 20,nstart = 25)
hist.df = df %>% bind_cols(.,as.data.frame(km.res$cluster))
names(hist.df)[ncol(hist.df)] = 'Cluster'
if (s == 17){hist.joint = hist.df} else {hist.joint = bind_rows(hist.joint,hist.df)}
}
# Read in data and set up for k-means analysis
df = read.csv(paste(getwd(),'/para_set_',s,'/model_run_',run,'/paraset_',s,'_offspring_map_',g,'.csv',sep=""))
for (s in 17:24){
# Read in data and set up for k-means analysis
df = read.csv(paste(getwd(),'/para_set_',s,'/model_run_',run,'/paraset_',s,'_offspring_map_',g,'.csv',sep=""))
neutral.df = df %>% select(.,FLday,X_pos,Y_pos,mapA,mapB,mapC,loc1a:loc5b,neut1a:neut24b)
neutral.df[] = lapply(neutral.df, as.character)
neutral.df[neutral.df == 'D'] = 1;
neutral.df[neutral.df[,] == 'd'] = 0
neutral.df[] = lapply(neutral.df, as.numeric)
neutral.df = neutral.df %>%
mutate(.,F1 = loc1a+loc1b) %>%
mutate(.,F2 = loc2a+loc2b) %>%
mutate(.,F3 = loc3a+loc3b) %>%
mutate(.,F4 = loc4a+loc4b) %>%
mutate(.,F5 = loc5a+loc5b) %>%
mutate(.,map1 = neut1a+neut1b) %>%
mutate(.,map2 = neut2a+neut2b) %>%
mutate(.,map3 = neut3a+neut3b) %>%
mutate(.,map4 = neut4a+neut4b) %>%
mutate(.,map5 = neut5a+neut5b) %>%
mutate(.,map6 = neut6a+neut6b) %>%
mutate(.,map7 = neut7a+neut7b) %>%
mutate(.,map8 = neut8a+neut8b) %>%
mutate(.,map9 = neut9a+neut9b) %>%
mutate(.,map10 = neut10a+neut10b) %>%
mutate(.,map11 = neut11a+neut11b) %>%
mutate(.,map12 = neut12a+neut12b) %>%
mutate(.,map13 = neut13a+neut13b) %>%
mutate(.,map14 = neut14a+neut14b) %>%
mutate(.,map15 = neut15a+neut15b) %>%
mutate(.,map16 = neut16a+neut16b) %>%
mutate(.,map17 = neut17a+neut17b) %>%
mutate(.,map18 = neut18a+neut18b) %>%
mutate(.,map19 = neut19a+neut19b) %>%
mutate(.,map20 = neut20a+neut20b) %>%
mutate(.,map21 = neut21a+neut21b) %>%
mutate(.,map22 = neut22a+neut22b) %>%
mutate(.,map23 = neut23a+neut23b) %>%
mutate(.,map24 = neut24a+neut24b)
ind.neutral.df = neutral.df %>% select(.,FLday,X_pos,Y_pos,mapA:mapC,map1:map24)
neutral.df = neutral.df %>% select(.,mapA:mapC,map1:map24)
df.scaled = scale(neutral.df)
scaled.matrix = as.matrix(df.scaled)
k.means = 2#d_clust$G
km.res = kmeans(df.scaled, k.means, iter.max = 20,nstart = 25)
hist.df = df %>% bind_cols(.,as.data.frame(km.res$cluster))
names(hist.df)[ncol(hist.df)] = 'Cluster'
if (s == 17){hist.joint = hist.df} else {hist.joint = bind_rows(hist.joint,hist.df)}
}
hist.joint$grouping = 'Selfing'
hist.joint$grouping[(1+nrow(hist.joint)/2):nrow(hist.joint)] = 'No selfing'
hist.joint$paraset[(hist.joint$paraset == 17)|(hist.joint$paraset == 21)] = 'Random'
hist.joint$paraset[(hist.joint$paraset == 18)|(hist.joint$paraset == 22)] = 'IBT'
for (s in 17:24){
# Read in data and set up for k-means analysis
df = read.csv(paste(getwd(),'/para_set_',s,'/model_run_',run,'/paraset_',s,'_offspring_map_',g,'.csv',sep=""))
neutral.df = df %>% select(.,FLday,X_pos,Y_pos,mapA,mapB,mapC,loc1a:loc5b,neut1a:neut24b)
neutral.df[] = lapply(neutral.df, as.character)
neutral.df[neutral.df == 'D'] = 1;
neutral.df[neutral.df[,] == 'd'] = 0
neutral.df[] = lapply(neutral.df, as.numeric)
neutral.df = neutral.df %>%
mutate(.,F1 = loc1a+loc1b) %>%
mutate(.,F2 = loc2a+loc2b) %>%
mutate(.,F3 = loc3a+loc3b) %>%
mutate(.,F4 = loc4a+loc4b) %>%
mutate(.,F5 = loc5a+loc5b) %>%
mutate(.,map1 = neut1a+neut1b) %>%
mutate(.,map2 = neut2a+neut2b) %>%
mutate(.,map3 = neut3a+neut3b) %>%
mutate(.,map4 = neut4a+neut4b) %>%
mutate(.,map5 = neut5a+neut5b) %>%
mutate(.,map6 = neut6a+neut6b) %>%
mutate(.,map7 = neut7a+neut7b) %>%
mutate(.,map8 = neut8a+neut8b) %>%
mutate(.,map9 = neut9a+neut9b) %>%
mutate(.,map10 = neut10a+neut10b) %>%
mutate(.,map11 = neut11a+neut11b) %>%
mutate(.,map12 = neut12a+neut12b) %>%
mutate(.,map13 = neut13a+neut13b) %>%
mutate(.,map14 = neut14a+neut14b) %>%
mutate(.,map15 = neut15a+neut15b) %>%
mutate(.,map16 = neut16a+neut16b) %>%
mutate(.,map17 = neut17a+neut17b) %>%
mutate(.,map18 = neut18a+neut18b) %>%
mutate(.,map19 = neut19a+neut19b) %>%
mutate(.,map20 = neut20a+neut20b) %>%
mutate(.,map21 = neut21a+neut21b) %>%
mutate(.,map22 = neut22a+neut22b) %>%
mutate(.,map23 = neut23a+neut23b) %>%
mutate(.,map24 = neut24a+neut24b)
ind.neutral.df = neutral.df %>% select(.,FLday,X_pos,Y_pos,mapA:mapC,map1:map24)
neutral.df = neutral.df %>% select(.,mapA:mapC,map1:map24)
df.scaled = scale(neutral.df)
scaled.matrix = as.matrix(df.scaled)
k.means = 2#d_clust$G
km.res = kmeans(df.scaled, k.means, iter.max = 20,nstart = 25)
hist.df = df %>% bind_cols(.,as.data.frame(km.res$cluster))
names(hist.df)[ncol(hist.df)] = 'Cluster'
hist.df$paraset = s
if (s == 17){hist.joint = hist.df} else {hist.joint = bind_rows(hist.joint,hist.df)}
}
hist.joint$grouping = 'Selfing'
hist.joint$grouping[(1+nrow(hist.joint)/2):nrow(hist.joint)] = 'No selfing'
hist.joint$paraset[(hist.joint$paraset == 17)|(hist.joint$paraset == 21)] = 'Random'
hist.joint$paraset[(hist.joint$paraset == 18)|(hist.joint$paraset == 22)] = 'IBT'
hist.joint$paraset[(hist.joint$paraset == 19)|(hist.joint$paraset == 23)] = 'IBD'
hist.joint$paraset[(hist.joint$paraset == 20)|(hist.joint$paraset == 24)] = 'IBDxIBT'
head(hist.joint)
names(hist.joint)[ncol(hist.joint)-1] = 'Isolation'
ggplot(data=hist.df,aes(FLday)) + geom_histogram(aes(fill=factor(km.res$cluster)),position='dodge')+guides(fill=guide_legend(title="Neutral cluster"))+theme_classic()+ylab('Count')+facet_grid(Isolation~grouping)
ggplot(data=hist.joint,aes(FLday)) + geom_histogram(aes(fill=factor(km.res$cluster)),position='dodge')+guides(fill=guide_legend(title="Neutral cluster"))+theme_classic()+ylab('Count')+facet_grid(Isolation~grouping)
ggplot(data=hist.joint,aes(FLday)) + geom_histogram(aes(fill=factor(Cluster)),position='dodge')+guides(fill=guide_legend(title="Neutral cluster"))+theme_classic()+ylab('Count')+facet_grid(Isolation~grouping)
